// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ehandel.DataAccess.Data;

#nullable disable

namespace ehandel.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230504091526_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ehandel.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Table lamp"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Light"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bags"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Dress"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Decoration"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Essentials"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Interior"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Mobile"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Beauty"
                        });
                });

            modelBuilder.Entity("ehandel.Models.ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeOfContact")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "This is a test comment.",
                            Company = "Acme Inc.",
                            Email = "johndoe@example.com",
                            Name = "John Doe",
                            Phone = "123-456-7890",
                            TimeOfContact = new DateTime(2023, 5, 4, 11, 15, 26, 243, DateTimeKind.Local).AddTicks(2401)
                        });
                });

            modelBuilder.Entity("ehandel.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedDateTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("ProductRatingId")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductRatingId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDateTime = "2023-05-04 11:15",
                            Description = "Placeholder description",
                            ImageUrl = "\\img\\products\\placeholder.svg",
                            Name = "Placeholder product",
                            Price = 99.99m,
                            ProductRatingId = 1,
                            SKU = "04acc686-02ca-4e4a-adc1-cb6bb3f297c4"
                        });
                });

            modelBuilder.Entity("ehandel.Models.ProductRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductRatings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rating = "1"
                        },
                        new
                        {
                            Id = 2,
                            Rating = "2"
                        },
                        new
                        {
                            Id = 3,
                            Rating = "3"
                        },
                        new
                        {
                            Id = 4,
                            Rating = "4"
                        },
                        new
                        {
                            Id = 5,
                            Rating = "5"
                        });
                });

            modelBuilder.Entity("ehandel.Models.ProductStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "New"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Popular"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Featured"
                        });
                });

            modelBuilder.Entity("ehandel.Models.ProductStatusMapping", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductStatusId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "ProductStatusId");

                    b.HasIndex("ProductStatusId");

                    b.ToTable("ProductStatusMappings");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductStatusId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            ProductStatusId = 2
                        },
                        new
                        {
                            ProductId = 1,
                            ProductStatusId = 3
                        });
                });

            modelBuilder.Entity("ehandel.Models.Product", b =>
                {
                    b.HasOne("ehandel.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ehandel.Models.ProductRating", "ProductRating")
                        .WithMany()
                        .HasForeignKey("ProductRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ProductRating");
                });

            modelBuilder.Entity("ehandel.Models.ProductStatusMapping", b =>
                {
                    b.HasOne("ehandel.Models.Product", "Product")
                        .WithMany("ProductStatusMappings")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ehandel.Models.ProductStatus", "ProductStatus")
                        .WithMany("ProductStatusMappings")
                        .HasForeignKey("ProductStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductStatus");
                });

            modelBuilder.Entity("ehandel.Models.Product", b =>
                {
                    b.Navigation("ProductStatusMappings");
                });

            modelBuilder.Entity("ehandel.Models.ProductStatus", b =>
                {
                    b.Navigation("ProductStatusMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
